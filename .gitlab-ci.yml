default:
  image: docker:latest

stages:
  - build
  - setup-back
  - pycs
  - pystan
  - test
  - deploy

build-job:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER  $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

setup-back-job:
  stage: setup-back
  image: $CI_REGISTRY_IMAGE
  needs:
    - ['build-job']
  script:
    - poetry install --no-root

pycs-job:
  stage: pycs
  image: $CI_REGISTRY_IMAGE
  needs:
    - ['setup-back-job']
  script:
    - poetry run autopep8 --in-place --aggressive --recursive .
    - poetry run flake8 app/
    - poetry run black app/
    - poetry run isort app/

pystan-job:
  stage: pystan
  image: $CI_REGISTRY_IMAGE
  needs:
    - ['setup-back-job']
  script:
    - poetry run mypy app/
    - poetry run pylint app/
    - poetry run bandit -r app/

test-job:
  stage: test
  image: $CI_REGISTRY_IMAGE
  needs:
    - ['setup-back-job']
  script:
    - poetry run pytest

deploy-job:
  stage: deploy
  script:
    - echo "DÃ©ploiement de l'application..."
