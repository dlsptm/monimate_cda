default:
  image: docker:latest

stages:
  - build
  - setup-back
  - pycs
  - pystan
  - test
  - deploy

cache:
  paths:
    - .cache/pypoetry
    - poetry.lock
    - pyproject.toml

before_script:
  - apk update
  - apk add --no-cache python3=3.13 py3-pip
  - python3 -m venv /venv
  - . /venv/bin/activate
  - pip install --upgrade pip
  - pip install poetry

build-job:
  stage: build
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER  $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

setup-back-job:
  stage: setup-back
  needs:
    - ['build-job']
  script:
    - poetry install --no-root

pycs-job:
  stage: pycs
  needs:
    - ['setup-back-job']
  script:
    - poetry run autopep8 --in-place --aggressive --recursive .
    - poetry run flake8 app/
    - poetry run black app/
    - poetry run isort app/

pystan-job:
  stage: pystan
  needs:
    - ['setup-back-job']
  script:
    - poetry run mypy app/
    - poetry run pylint app/
    - poetry run bandit -r app/

test-job:
  stage: test
  needs:
    - ['setup-back-job']
  script:
    - poetry run pytest

deploy-job:
  stage: deploy
  script:
    - echo "DÃ©ploiement de l'application..."
